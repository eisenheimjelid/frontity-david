version: 2.1

orbs:
  pantheon: pantheon-systems/pantheon@0.5.1
  gcp-cli: circleci/gcp-cli@1.8.5

jobs:
  frontend_build_and_deploy:
    docker:
      #- image: quay.io/pantheon-public/build-tools-ci:6.x
      - image: cimg/base:2020.10
    steps:
      # - checkout

      - attach_workspace:
          at: /tmp
      # - gcp-cli/install:
      #     version: "315.0.0"
      # - gcp-cli/initialize
      # - run:
      #     command: |
      #       export CLOUDSDK_CORE_DISABLE_PROMPTS=1
      #       gcloud components install beta && gcloud components update
      #     name: Prep Cloud Run components
      # - run:
      #     name: Derive additional environment variables
      #     command: /build-tools-ci/scripts/set-environment
      # - setup_remote_docker
      # - run:
      #     name: Authenticate docker registry
      #     command: gcloud beta auth configure-docker ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev
      # - run:
      #     name: Build and deploy docker image
      #     command: | 
      #       cd frontity 
      #       docker build -t ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/${TERMINUS_SITE}/${TERMINUS_SITE}:${CIRCLE_SHA1:0:7} .
      #       docker push ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/${TERMINUS_SITE}/${TERMINUS_SITE}:${CIRCLE_SHA1:0:7}
      # - run:
      #     name: Deploy to cloud run
      #     command: | 
      #       gcloud run deploy ${TERMINUS_SITE} --image ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/${TERMINUS_SITE}/${TERMINUS_SITE}:${CIRCLE_SHA1:0:7} \
      #       --region ${GOOGLE_COMPUTE_ZONE} --platform managed --memory 512Mi --allow-unauthenticated \
      #       --no-traffic --revision-suffix dev-${CIRCLE_SHA1:0:7} \
      #       --update-env-vars BACKEND_SITE=${TERMINUS_SITE},BACKEND_ENV=${TERMINUS_ENV}
      # - run:
      #     name: Update traffic labels
      #     command: | 
      #       gcloud beta run services update-traffic ${TERMINUS_SITE} \
      #       --region ${GOOGLE_COMPUTE_ZONE} --platform managed \
      #       --update-tags ${TERMINUS_ENV}-${CIRCLE_SHA1:0:7}=${TERMINUS_SITE}-${TERMINUS_ENV}-${CIRCLE_SHA1:0:7}

      #       gcloud run services update-traffic ${TERMINUS_SITE} --platform managed --region ${GOOGLE_COMPUTE_ZONE} --to-latest

      # - run:
      #     name: Test deployed service
      #     command: | 
      #       GET_GCP_DEPLOY_ENDPOINT=$(gcloud beta run services describe ${TERMINUS_SITE} --platform managed --region ${GOOGLE_COMPUTE_ZONE} --format="value(status.address.url)")
      #       GCP_ENDPOINT=https://${TERMINUS_ENV}-${CIRCLE_SHA1:0:7}---${GET_GCP_DEPLOY_ENDPOINT:8}
      #       curl -s $GCP_ENDPOINT
      #       echo ${GCP_ENDPOINT} is ready
      #       echo "export GCP_ENDPOINT=$GCP_ENDPOINT" >> $BASH_ENV
      
      - run: 
          command: |
            echo "export GCP_ENDPOINT=FOO" >> $BASH_ENV
            cp $BASH_ENV bash_env.txt
          

      - persist_to_workspace:
          root: .
          paths:
            - bash_env.txt


  connecting_node_bridge:
    docker:
      #- image: quay.io/pantheon-public/build-tools-ci:6.x
      - image: cimg/base:2020.10
    steps:
      - run: 
          command: |
            cp /tmp/bash_env.txt $BASH_ENV
            source $BASH_ENV
      - run:
          name: echo endpoint
          command: echo $GCP_ENDPOINT
      # - run:
      #     name: Derive additional environment variables
      #     command: /build-tools-ci/scripts/set-environment
      # - run:
      #     name: Authenticate with Terminus
      #     command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
      # - run:
      #     name: Setting secret in env to read with bridge mode
      #     command: terminus secrets:set ${TERMINUS_SITE}.${TERMINUS_ENV} frontend_url https://wordpress-frontity-bridge-demo-aelui2yqua-uc.a.run.app
    
      
      
              
workflows:
  build_and_deploy_node_bridge:
    jobs:
      # - pantheon/push
      - frontend_build_and_deploy
      - connecting_node_bridge:
          requires: 
            # - pantheon/push
            - frontend_build_and_deploy
      